cmake_minimum_required(VERSION 3.0)

project(superbuild)

include(ExternalProject)

set(GeographicLib_PREFIX "${CMAKE_CURRENT_BINARY_DIR}/geographiclib-prefix")


ExternalProject_Add(geographiclib
	URL http://builder.osmand.net/dependencies-mirror/geographiclib-1.46.tar.gz  # Source: https://sourceforge.net/projects/geographiclib/files/distrib/GeographicLib-1.46.tar.gz/download
	PATCH_COMMAND patch src/DMS.cpp < ${CMAKE_CURRENT_LIST_DIR}/geographiclib/0-custom-delimiters.patch
	CMAKE_ARGS
		-DBUILD_SHARED_LIBS:BOOL=ON
		-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
		-DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_BINARY_DIR}
		-DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
		-DBUILD_NETGEOGRAPHICLIB:BOOL=OFF
		-DGEOGRAPHICLIB_DOCUMENTATION:BOOL=OFF
		-DGEOGRAPHICLIB_LIB_TYPE:STRING=STATIC
)

# Hint: set  MAKEFLAGS='-j5' variable for faster build on 4 kernels
ExternalProject_Add(main
	DOWNLOAD_COMMAND ""
	BUILD_COMMAND ${CMAKE_MAKE_PROGRAM} ${MAKEFLAGS} OsmAndCore_shared_standalone
	BUILD_ALWAYS ON
	INSTALL_COMMAND ""
	SOURCE_DIR ${PROJECT_SOURCE_DIR}/..
	DEPENDS geographiclib
	CMAKE_ARGS
		if(DEFINED OSMAND_BINARIES_IVY_ROOT) -DOSMAND_BINARIES_IVY_ROOT=${OSMAND_BINARIES_IVY_ROOT} endif()
		if(DEFINED OSMAND_BUILD_CPU_CORES_NUM) -DOSMAND_BUILD_CPU_CORES_NUM=${OSMAND_BUILD_CPU_CORES_NUM} endif()
		if(DEFINED OSMAND_BUILD_TOOL) -DOSMAND_BUILD_TOOL=${OSMAND_BUILD_TOOL} endif()
		if(DEFINED OSMAND_CC) -DOSMAND_CC=${OSMAND_CC} endif()
		if(DEFINED OSMAND_CORE_EXPORTS) -DOSMAND_CORE_EXPORTS=${OSMAND_CORE_EXPORTS} endif()
		if(DEFINED OSMAND_CORE_INTERNAL) -DOSMAND_CORE_INTERNAL=${OSMAND_CORE_INTERNAL} endif()
		if(DEFINED OSMAND_CORE_STATIC) -DOSMAND_CORE_STATIC=${OSMAND_CORE_STATIC} endif()
		if(DEFINED OSMAND_CORE_TOOLS_EXPORTS) -DOSMAND_CORE_TOOLS_EXPORTS=${OSMAND_CORE_TOOLS_EXPORTS} endif()
		if(DEFINED OSMAND_CORE_TOOLS_STATIC) -DOSMAND_CORE_TOOLS_STATIC=${OSMAND_CORE_TOOLS_STATIC} endif()
		if(DEFINED OSMAND_CPU_SPECIFIC_DEFINE) -DOSMAND_CPU_SPECIFIC_DEFINE=${OSMAND_CPU_SPECIFIC_DEFINE} endif()
		if(DEFINED OSMAND_CROSSPLATFORM_TARGET) -DOSMAND_CROSSPLATFORM_TARGET=${OSMAND_CROSSPLATFORM_TARGET} endif()
		if(DEFINED OSMAND_CXX) -DOSMAND_CXX=${OSMAND_CXX} endif()
		if(DEFINED OSMAND_EXTERNAL_QT) -DOSMAND_EXTERNAL_QT=${OSMAND_EXTERNAL_QT} endif()
		if(DEFINED OSMAND_JAVA_AVAILABLE) -DOSMAND_JAVA_AVAILABLE=${OSMAND_JAVA_AVAILABLE} endif()
		if(DEFINED OSMAND_JNI_EXPORTS) -DOSMAND_JNI_EXPORTS=${OSMAND_JNI_EXPORTS} endif()
		if(DEFINED OSMAND_OPENGL2PLUS_RENDERER_SUPPORTED) -DOSMAND_OPENGL2PLUS_RENDERER_SUPPORTED=${OSMAND_OPENGL2PLUS_RENDERER_SUPPORTED} endif()
		if(DEFINED OSMAND_OPENGLES2_RENDERER_SUPPORTED) -DOSMAND_OPENGLES2_RENDERER_SUPPORTED=${OSMAND_OPENGLES2_RENDERER_SUPPORTED} endif()
		if(DEFINED OSMAND_OPENGL_RENDERERS_SUPPORTED) -DOSMAND_OPENGL_RENDERERS_SUPPORTED=${OSMAND_OPENGL_RENDERERS_SUPPORTED} endif()
		if(DEFINED OSMAND_OUTPUT_ROOT) -DOSMAND_OUTPUT_ROOT=${OSMAND_OUTPUT_ROOT} endif()
		if(DEFINED OSMAND_OWN_SHIPPED_QT) -DOSMAND_OWN_SHIPPED_QT=${OSMAND_OWN_SHIPPED_QT} endif()
		if(DEFINED OSMAND_OWN_SHIPPED_QT_SHARED) -DOSMAND_OWN_SHIPPED_QT_SHARED=${OSMAND_OWN_SHIPPED_QT_SHARED} endif()
		if(DEFINED OSMAND_OWN_SHIPPED_QT_STATIC) -DOSMAND_OWN_SHIPPED_QT_STATIC=${OSMAND_OWN_SHIPPED_QT_STATIC} endif()
		if(DEFINED OSMAND_QT_FLAVOUR) -DOSMAND_QT_FLAVOUR=${OSMAND_QT_FLAVOUR} endif()
		if(DEFINED OSMAND_ROOT) -DOSMAND_ROOT=${OSMAND_ROOT} endif()
		if(DEFINED OSMAND_SPECIFIC_CPU_NAME) -DOSMAND_SPECIFIC_CPU_NAME=${OSMAND_SPECIFIC_CPU_NAME} endif()
		if(DEFINED OSMAND_SWIG) -DOSMAND_SWIG=${OSMAND_SWIG} endif()
		if(DEFINED OSMAND_SWIG_AVAILABLE) -DOSMAND_SWIG_AVAILABLE=${OSMAND_SWIG_AVAILABLE} endif()
		if(DEFINED OSMAND_SYSTEM_QT) -DOSMAND_SYSTEM_QT=${OSMAND_SYSTEM_QT} endif()
		if(DEFINED OSMAND_TARGET) -DOSMAND_TARGET=${OSMAND_TARGET} endif()
		if(DEFINED OSMAND_TARGET_PREFIX) -DOSMAND_TARGET_PREFIX=${OSMAND_TARGET_PREFIX} endif()
		if(DEFINED OSMAND_TARGET_SPECIFICATION) -DOSMAND_TARGET_SPECIFICATION=${OSMAND_TARGET_SPECIFICATION} endif()
		-DCMAKE_MODULE_PATH:PATH=${GeographicLib_PREFIX}/src/geographiclib-build
		-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
)
